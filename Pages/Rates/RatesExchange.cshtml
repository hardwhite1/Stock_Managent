@page
@model Pages.Rates.RatesExchangeModel
@{
    ViewData["Title"] = "Exchange Rates";
}

<style>
    table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
    font-family: Arial, sans-serif;
    font-size: 16px;
    }

    th, td {
    border: 1px solid #ddd;
    padding: 12px;
    text-align: left;
    }

    th {
    background-color: #4CAF50;
    color: white;
    text-transform: uppercase;
    }

    tr:nth-child(even) {
    background-color: #f2f2f2;
    }

    tr:hover {
    background-color: #ddd;
    transition: background-color 0.3s ease-in-out;
    }

    h2 {
    font-size: 24px;
    color: #333;
    text-align: center;
    margin-top: 20px;
    }
</style>


<h2>Exchange Rates (Base: @Model.ExchangeRates?.Base)</h2>

<table class="table">
    <thead>
        <tr>
            <th>Currency</th>
            <th>Rate</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var rate in Model.ExchangeRates!.Rates)
        {
            <tr>
                <td>@rate.Key</td>
                <td>@rate.Value</td>
            </tr>
        }
    </tbody>
</table>
<div class="pagination">
    @if(Model.ExchangeRates.pagination != null && Model.ExchangeRates.pagination.HasPreviousPage)
    {
        <a asp-page="./RatesExchange" asp-route-currentPage="@(Model.ExchangeRates.pagination.CurrentPage - 1)">Previous</a>
    }

    @if (Model.ExchangeRates.pagination != null)
    {
        <span>
            Page @(Model.ExchangeRates.pagination.CurrentPage) of @(Model.ExchangeRates.pagination.TotalPages)
        </span>
    }
    else
    {
        <span>Page 1 of 1</span>
    }


    @if (Model.ExchangeRates.pagination != null && Model.ExchangeRates.pagination.HasNextPage)
    {
        <a asp-page="./RatesExchange" asp-route-currentPage="@(Model.ExchangeRates.pagination.CurrentPage + 1)">Next</a>
    }
</div>

